apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pdc-portal.fullname" . }}
  labels:
    {{ include "pdc-portal.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  strategy:
  {{- with .Values.deployment.updateStrategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pdc-portal.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{ include "pdc-portal.labels" . | nindent 8 }}
        {{- with .Values.deployment.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.deployment.additionalAnnotations -}}
      annotations:
        {{- with .Values.deployment.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec: 
      serviceAccountName: {{ include "pdc-portal.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.config.express.port }}
              protocol: TCP
          {{- if .Values.debug.enabled }}
          env:
            - name: DEBUG
              value: {{ .Values.debug.output | quote }}
          {{- end }}
          {{- if .Values.existingSecretEnvs }}
          envFrom:
            - secretRef:
                name: {{ .Values.existingSecretEnvs | quote }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.express.port }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.express.port }}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /home/portal/config/pdc-portal.yml
              subPath: pdc-portal.yml
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "pdc-portal.fullname" . }}
            items:
              - key: pdc-portal.yml
                path: pdc-portal.yml
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
